Karen Cudjoe
CS 342
Guide 11
4/17/2017

1. Read Your First Cup: An Introduction to the Java EE Platform — Focus on Chapter 2, “Understanding Java Platform, Enterprise Edition”

a. Explain the tiers discussed in the article. On which does J2EE focus? On which to the Oracle database focus?
- Client Tier: Consists of application clients that access a Java EE server and that are usually located on a different machine from the server.
- Web Tier: Consists of components that handle the interaction between clients and the business tier.
- Business Tier: Consists of components that provide the business logic for an application.
- Enterprise Information Systems (EIS) Tier consists of database servers, enterprise resource planning systems, and other legacy data sources, like mainframes. 

Java EE applications concentrate on the middle (web tier and business tier) tier.


b. Explain the nature of a J2EE container. What sort of containers are there?
Java EE containers are the interface between the component and the lower-level functionality provided by the platform to support that component

Types of containers: 
- Web Container: Interface between web component and web server, 
- EJB Container: Interface between enterprise beans providing business logic and Java EE Server
- Application Client Container: Interface between Java EE Client and Java EE Server.



2. Read The Java EE Tutorial — This tutorial provides extensive material on J2EE; focus on the sections listed here.

a. Sections 1.7–1.8, “Java EE 7 APIs” — Explain the purpose of these technologies (only): 
- JPA: 
Java Persistence API (JPA) is a Java standards–based solution for persistence. Persistence uses an object/relational mapping approach to bridge the gap between an object-oriented model and a relational database. 

- JTA: 
Java Transaction API (JTA) provides a standard interface for demarcating transactions. The Java EE architecture provides a default auto commit to handle transaction commits and rollbacks. 

- JAX-RS*:
Java API for RESTful Web Services (JAX-RS) defines APIs for the development of web services built according to the REST architectural style. 

- JDBC: 
Java Database Connectivity (JDBC) API lets you invoke SQL commands from Java programming language methods. 

- JAXB: 
Java Architecture for XML Binding (JAXB) provides a convenient way to bind an XML schema to a representation in Java language programs. 


b. Section 5, “Packaging Applications” — Compare and contrast JARs, WARs & EARs.
- A Java EE application is delivered in a Java Archive (JAR) file, a Web Archive (WAR) file, or an Enterprise Archive (EAR) file.
- A WAR or EAR file is a standard JAR (.jar) file with a .war or .ear extension. 
- Using JAR, WAR, and EAR files and modules makes it possible to assemble a number of different Java EE applications using some of the same components. 
- An EAR file contains java EE modules and optionally deployment descriptors.
- An EJB JAR file is portable and can be used for various applications.
- Web modules, which contain servlet class files, web files, supporting class files, GIF and HTML files, and, optionally, a web application deployment descriptor. Web modules are packaged as JAR files with a .war (web archive) extension.



3. Review these tutorials, on which the lab is based: Developing a Java EE Application & Creating and Running Your First RESTful Web Service.

a. Identify the IDE we’ll use for J2EE development.
IntelliJ IDEA – it is a Java IDE
IntelliJ IDEA 2016.3


b. Identify the roles of the following technologies in the J2EE application: 
- JDK: Used as the project SDK (software development kit). Thus, JDK is a software development kit used to develop java applications. 
- GlassFish: This is the application server we will use to host the service. 


c. Explain the nature of a RESTful webservice.*
REST defines a set of architectural principles by which you can design Web services that focus on a system's resources. 

Four Basic Design Principles
- Use HTTP methods explicitly
- Be stateless
- Expose directory structure like URI’s 
- Transfers XML/JSON or both 