Karen Cudjoe
CS 342
Guide 8

1. Read Sections 10.1, 10.4.1 & 26.1.1–2:

a. Name the three basic approaches to database programming.
- Embedding database commands in a general-purpose programming. 
Database statements are embedded into the host programming language, but they are identified by a special prefix. 
- Using a library of database functions or classes. 
A library of functions is made available to the host programming language for database calls. 
- Designing a brand-new language. 
A database programming language is designed from scratch to be compatible with the database model and query language. 


b. Explain the concepts of:

i. impedance mismatch
This refers to the problems that occur because of differences between the database model and the programming language model. The data types of the programming language differ from the attribute data types that are available in the data model. 

ii. stored procedures
Database program modules — procedures or functions — that are stored and executed by the DBMS at the database server. 

iii. triggers
These are procedures that specify actions that are automatically triggered by certain events.  Triggers specify active rules.



2. Read Server-Side Programming: PL/SQL and Java.. Focus on server-side programming, PL/SQL and triggers; skip the section on “Overview of Java in Oracle Database”.
a. Compare and contrast:

i. procedural vs non-procedural languages.
In a nonprocedural language such as SQL, the set of data to be operated on is specified, but not the operations to be performed or the manner in which they are to be carried out. In a procedural language program, most statement execution depends on previous or subsequent statements and on control structures, such as loops or conditional branches, that are not available in SQL.

ii. client-side vs server-side database programming.
Client-side programming is used to embed SQL statements in applications written in procedural languages such as C, C++, or Java
Server-side programming is used to develop data logic that resides in the database


b. Explain why one would want to do server-side programming using PL/SQL.
The principal benefit of server-side programming is that functionality built into the database can be deployed anywhere. The database and not the application determines the best way to perform tasks on a given operating system. Also, subprograms increase scalability by centralizing application processing on the server, enabling clients to reuse code. Because subprogram calls are quick and efficient, a single call can start a compute-intensive stored subprogram, reducing network traffic.


c. For each of the following code segments, identify the type of the database object and explain what it does.

i. 
CREATE PROCEDURE limited_count (limit IN integer) AS
BEGIN
  FOR i IN 1..limit LOOP
      dbms_output.put_line(i);
  END LOOP; 
END;

This is a procedure (stored procedure) which is a type of subprogram. It iterates i from 1 to the limit given to it as input. It then prints out i each time. 

ii. 
BEGIN
  dbms_output.put_line('Hello, PL/SQL!');
END;

This is an anonymous block because it is not named. It prints out “Hello, PL/SQL” to the terminal or screen.
 
iii.
CREATE TRIGGER log_trigger
  BEFORE INSERT OR UPDATE OF lastName ON Person
  FOR each row
BEGIN
  dbms_output.put_line('Hello, name change!');
END;

This is a trigger. It is triggered before a new last name is inserted or before an existing one is updated. Before inserting or updating the last name of a person, it prints out “Hello, name change!” 
