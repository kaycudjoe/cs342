c. Exploring the project structure — How do the external libraries (in the project pane) relate to J2SE and J2EE?
The two external libraries are JDK (Java Development Kit) and GlassFish 4.1. These libraries are necessary to build our
J2EE application. JDK 1.8 makes up J2SE (Standard Edition) and adding the GlassFish libraries (JAR files) makes it
J2EE (Enterprise Edition).

d. Developing source code — Set the HTML title and body content to whatever you’d like. At what tier does this application run?
This application is running on a web tier.

e. Running the application &
Modifying the code and observing the changes — What server does this step use to serve up your application?
For a hint, look at what’s served up at the URL: /. How does it compare with a typical web server?
This step uses localhost:8080 to serve my application.
It is different from a web server because localhost runs on the local computer host, and web servers usually serve up
applications from a remote server.

f. Exploring a run configuration &
   Exploring an artifact configuration —
   Skim through these sections, making sure that you can find the application features they discuss. What is a WAR file?
   A WAR file is a web application archive which is a directory structure that is ready for deployment on a web server.

g. What’s the difference between “exploded” and non-exploded WAR files?
The aplication server in an exploded WAR file pointss to a folder containing the unzipped (exploded) contents of what will
be inside the WAR file.
The non-exploded WAR file is the actual archive file that is ready for deployment onto a web server.

h. Compare and contrast EAR and WAR artifacts.
   EAR contains all the components that make up a J2EE application, including the WAR file. The WAR is however just for web.


 Exercise 11.2
 Tha application uses the JAX-RS library for REST support.

